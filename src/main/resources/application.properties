#spring.datasource.url=jdbc:postgresql://localhost:5432/nutrical?createDatabaseIfNotExist=true
#spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/nutrical
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.sql.init.continue-on-error=true
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.devtools.remote.secret="secret"
server.port=8085
spring.profiles.active=dev
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQL95Dialect
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.data-locations=classpath:/data.sql
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.cache.jcache.config=classpath:ehcache.xml
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
app.auth.tokenSecret=${env.TOKEN_SECRET}
app.auth.tokenExpirationSeconds=864000
app.cors.allowedOrigins=http://localhost:3000, http://127.0.0.1:3000
app.mailing.templatesLocation=templates
app.mailing.senderAddress=${env.EMAIL_SENDER_ADDRESS}

{"ast":null,"code":"import { createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a6b981a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Vitamins \");\n\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Column = _resolveComponent(\"Column\");\n\n  const _component_ProgressBar = _resolveComponent(\"ProgressBar\");\n\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n\n  const _component_Card = _resolveComponent(\"Card\");\n\n  return _openBlock(), _createBlock(_component_Card, {\n    class: \"border\"\n  }, {\n    title: _withCtx(() => [_hoisted_1]),\n    content: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_DataTable, {\n      value: $data.data,\n      class: \"hide-header\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Column, {\n        field: \"nutrient\",\n        style: {\n          \"min-width\": \"15rem\"\n        }\n      }, {\n        body: _withCtx(({\n          data\n        }) => [_createElementVNode(\"p\", {\n          style: {\n            \"cursor\": \"pointer\"\n          },\n          onClick: $event => $options.showDetails(data)\n        }, _toDisplayString(data.nutrient), 9\n        /* TEXT, PROPS */\n        , _hoisted_2)]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_Column, {\n        field: \"quantity\",\n        style: {\n          \"min-width\": \"5rem\"\n        }\n      }, {\n        body: _withCtx(({\n          data\n        }) => [_createTextVNode(_toDisplayString(data.quantity) + \" \" + _toDisplayString(data.unit), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_Column, {\n        field: \"progress\",\n        style: {\n          \"min-width\": \"10rem\"\n        }\n      }, {\n        body: _withCtx(({\n          data\n        }) => [_createVNode(_component_ProgressBar, {\n          value: data.progress\n        }, null, 8\n        /* PROPS */\n        , [\"value\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"value\"])])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;iDAEqB;;;;;;;;;;;;uBADnBA,aAuBOC,eAvBP,EAuBO;IAvBDC,KAAK,EAAC;EAuBL,CAvBP,EAAoB;IACPC,KAAK,WAAC,MAAU,YAAX,CADE;IAEPC,OAAO,WAChB,MAkBM,CAlBNC,oBAkBM,KAlBN,EAkBM,IAlBN,EAkBM,CAjBJC,aAgBYC,oBAhBZ,EAgBY;MAhBAC,KAAK,EAAEC,UAgBP;MAhBaP,KAAK,EAAC;IAgBnB,CAhBZ;wBACE,MAIS,CAJTI,aAISI,iBAJT,EAIS;QAJDC,KAAK,EAAC,UAIL;QAJgBC,KAAwB,EAAxB;UAAA;QAAA;MAIhB,CAJT;QACaC,IAAI,WACb,CAA6E;UAD5DC;QAC4D,CAA7E,KADqB,CACrBT,oBAA6E,GAA7E,EAA6E;UAA1EO,KAAuB,EAAvB;YAAA;UAAA,CAA0E;UAAjDG,OAAK,YAAEC,qBAAYF,IAAZ;QAA0C,CAA7E,mBAAyDA,IAAI,CAACG,SAA9D,EAAsE;QAAA;QAAtE,EAAsEC,UAAtE,CADqB,CAAR;;;;OADjB,CAIS,EACTZ,aAISI,iBAJT,EAIS;QAJDC,KAAK,EAAC,UAIL;QAJgBC,KAAuB,EAAvB;UAAA;QAAA;MAIhB,CAJT;QACaC,IAAI,WACb,CAAmB;UADFC;QACE,CAAnB,KADqB,mCAClBA,IAAI,CAACK,YAAW,MAACC,iBAAGN,IAAI,CAACO,IAAR,GAAY;QAAA;SADX,CAAR;;;;OADjB,CADS,EAMTf,aAISI,iBAJT,EAIS;QAJDC,KAAK,EAAC,UAIL;QAJgBC,KAAwB,EAAxB;UAAA;QAAA;MAIhB,CAJT;QACaC,IAAI,WACb,CAAsC;UADrBC;QACqB,CAAtC,KADqB,CACrBR,aAAsCgB,sBAAtC,EAAsC;UAAxBd,KAAK,EAAEM,IAAI,CAACS;QAAY,CAAtC;;QAAA,YADqB,CAAR;;;;OADjB,CANS;;;;KALX;;IAAA,YAiBI,CAlBN,CAkBM,CAnBU,CAFA;;;;EAAA,CAApB","names":["_createBlock","_component_Card","class","title","content","_createElementVNode","_createVNode","_component_DataTable","value","$data","_component_Column","field","style","body","data","onClick","$options","nutrient","_hoisted_2","quantity","_toDisplayString","unit","_component_ProgressBar","progress"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Diplomski\\Nutrical\\src\\frontend\\src\\components\\ScoreVitamins.vue"],"sourcesContent":["<template>\r\n  <Card class=\"border\">\r\n    <template #title> Vitamins </template>\r\n    <template #content>\r\n      <div>\r\n        <DataTable :value=\"data\" class=\"hide-header\">\r\n          <Column field=\"nutrient\" style=\"min-width: 15rem\">\r\n            <template #body=\"{ data }\">\r\n              <p style=\"cursor: pointer\" @click=\"showDetails(data)\">{{ data.nutrient }}</p>\r\n            </template>\r\n          </Column>\r\n          <Column field=\"quantity\" style=\"min-width: 5rem\">\r\n            <template #body=\"{ data }\">\r\n              {{ data.quantity }} {{ data.unit }}\r\n            </template>\r\n          </Column>\r\n          <Column field=\"progress\" style=\"min-width: 10rem\">\r\n            <template #body=\"{ data }\">\r\n              <ProgressBar :value=\"data.progress\" />\r\n            </template>\r\n          </Column>\r\n        </DataTable>\r\n      </div>\r\n    </template>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      nutrients: [],\r\n      data: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    fetch(\"/api/calculator/getNutrients\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.nutrients = JSON.parse(data);\r\n        for (var i = 0; i < this.nutrients.length; i++) {\r\n          this.data.push({\r\n            nutrient: this.nutrients[i].name,\r\n            function: this.nutrients[i].function,\r\n            sources: this.nutrients[i].sources,\r\n            quantity: 0,\r\n            unit: this.nutrients[i].unit,\r\n            progress: 0,\r\n          });\r\n        }\r\n      });\r\n  },\r\n  methods: {\r\n    showDetails(data) {\r\n        this.$parent.openDialog(data);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n::v-deep(.p-progressbar) .p-progressbar-value {\r\n  background-color: var(--green);\r\n  font-size: 12px;\r\n}\r\n\r\n::v-deep(.p-datatable .p-datatable-thead tr th) {\r\n  padding: 0 !important;\r\n}\r\n\r\n::v-deep(.p-datatable .p-datatable-tbody tr td) {\r\n  padding: 8px !important;\r\n  font-size: 15px !important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
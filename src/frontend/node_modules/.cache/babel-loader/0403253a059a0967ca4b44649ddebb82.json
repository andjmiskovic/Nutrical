{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  style: {\n    \"margin-left\": \"100px\"\n  }\n}, \"HELLO\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Block Button \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($data.msg), 1\n  /* TEXT */\n  ), _createVNode(_component_NavBar), _hoisted_1, _createVNode(_component_v_btn, {\n    block: \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  })], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGIA,oBAAiD,QAAjD,EAAiD;EAAzCC,KAA0B,EAA1B;IAAA;EAAA;AAAyC,CAAjD,EAAmC,OAAnC,EAAwC;AAAA;AAAxC;;iDACe;;;;;;;6DAHfD,oBAAgB,IAAhB,EAAgB,IAAhB,EAAgBE,iBAAVC,SAAU,CAAhB,EAAS;EAAA;EAAT,GACAC,aAAiBC,iBAAjB,GACAC,YACEF,aAEIG,gBAFJ,EAEI;IAFGC,KAAK,EAAL;EAEH,CAFJ,EAAY;sBAAC,MAEjB,aAFgB;;;;EAAA,CAAZ","names":["_createElementVNode","style","_toDisplayString","$data","_createVNode","_component_NavBar","_hoisted_1","_component_v_btn","block"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Diplomski\\Nutrical\\src\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n    <h1>{{msg}}</h1>\n    <NavBar></NavBar>\n    <button style=\"margin-left: 100px\">HELLO</button>\n      <v-btn block>\n    Block Button\n  </v-btn>\n</template>\n\n<script>\nimport NavBar from './NavBar.vue'\nexport default {\n  name: 'HelloWorld',\n  components: { NavBar },\n  data() {\n    return {\n        msg: ''\n    }\n  },\n  mounted() {\n    fetch(\"/api/calculator/hello\")\n    .then((response) => response.text())\n    .then((data) => {\n        this.msg = data;\n    })\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}
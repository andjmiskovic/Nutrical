{"ast":null,"code":"import { FilterMatchMode } from \"primevue/api\";\nexport default {\n  name: \"AddFood\",\n  props: [],\n\n  data() {\n    return {\n      visible: false,\n      serving: 100,\n      search: \"\",\n      food: [],\n      selectedFood: null,\n      filters: {\n        name: {\n          value: null,\n          matchMode: FilterMatchMode.STARTS_WITH\n        }\n      }\n    };\n  },\n\n  mounted() {\n    fetch(\"/api/calculator/getFood\").then(response => response.text()).then(data => {\n      this.food = JSON.parse(data);\n      console.log(this.food);\n    });\n  },\n\n  methods: {\n    closeDialog() {\n      this.visible = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkDA,SAASA,eAAT,QAAgC,cAAhC;AAEA,eAAe;EACbC,IAAI,EAAE,SADO;EAEbC,KAAK,EAAE,EAFM;;EAGbC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,KADJ;MAELC,OAAO,EAAE,GAFJ;MAGLC,MAAM,EAAE,EAHH;MAILC,IAAI,EAAE,EAJD;MAKLC,YAAY,EAAE,IALT;MAMLC,OAAO,EAAE;QACPR,IAAI,EAAE;UAAES,KAAK,EAAE,IAAT;UAAeC,SAAS,EAAEX,eAAe,CAACY;QAA1C;MADC;IANJ,CAAP;EAUD,CAdY;;EAebC,OAAO,GAAG;IACRC,KAAK,CAAC,yBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESZ,IAAD,IAAU;MACd,KAAKI,IAAL,GAAYW,IAAI,CAACC,KAAL,CAAWhB,IAAX,CAAZ;MACAiB,OAAO,CAACC,GAAR,CAAY,KAAKd,IAAjB;IACD,CALH;EAMD,CAtBY;;EAuBbe,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ,KAAKnB,OAAL,GAAe,KAAf;IACD;;EAHM;AAvBI,CAAf","names":["FilterMatchMode","name","props","data","visible","serving","search","food","selectedFood","filters","value","matchMode","STARTS_WITH","mounted","fetch","then","response","text","JSON","parse","console","log","methods","closeDialog"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Diplomski\\Nutrical\\src\\frontend\\src\\components\\AddFood.vue"],"sourcesContent":["<template>\r\n  <Dialog\r\n    header=\"Add food to Daily Diary\"\r\n    v-model:visible=\"visible\"\r\n    style=\"width: 70%\"\r\n    :maximizable=\"true\"\r\n    :reject=\"closeDialog\"\r\n    :closeOnEscape=\"true\"\r\n  >\r\n    <DataTable\r\n      class=\"p-datatable-sm\"\r\n      selectionMode=\"single\"\r\n      v-model:selection=\"selectedFood\"\r\n      :value=\"food\"\r\n      :scrollable=\"true\"\r\n    >\r\n      <Column style=\"min-width: 50%\" field=\"name\" header=\"Name\"></Column>\r\n      <Column field=\"calories\" header=\"Calories\"></Column>\r\n      <Column field=\"protein\" header=\"Protein\"></Column>\r\n      <Column field=\"carbs\" header=\"Carbs\"></Column>\r\n      <Column field=\"fat\" header=\"Fat\"></Column>\r\n    </DataTable>\r\n\r\n    <template #footer>\r\n      <div class=\"grid\" style=\"margin-top: 10px\">\r\n        <div class=\"col\">\r\n          <span class=\"p-input-icon-left\" style=\"float: left\">\r\n            <i class=\"pi pi-search\" />\r\n            <InputText v-model=\"search\" placeholder=\"Search food...\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"col\" style=\"width: 200px\">\r\n          <div class=\"p-inputgroup\" style=\"display: inline\">\r\n            <span class=\"p-inputgroup-addon\">Serving</span>\r\n            <InputNumber\r\n              mode=\"decimal\"\r\n              suffix=\"g\"\r\n              :min=\"0\"\r\n              :max=\"99999\"\r\n              v-model=\"serving\"\r\n            />\r\n          </div>\r\n          <Button style=\"display: inline\" label=\"Add\" icon=\"pi pi-check\" @click=\"closeDialog\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport { FilterMatchMode } from \"primevue/api\";\r\n\r\nexport default {\r\n  name: \"AddFood\",\r\n  props: [],\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      serving: 100,\r\n      search: \"\",\r\n      food: [],\r\n      selectedFood: null,\r\n      filters: {\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    fetch(\"/api/calculator/getFood\")\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        this.food = JSON.parse(data);\r\n        console.log(this.food);\r\n      });\r\n  },\r\n  methods: {\r\n    closeDialog() {\r\n      this.visible = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default {\n  props: [\"kind\"],\n\n  data() {\n    return {\n      nutrients: [],\n      data: []\n    };\n  },\n\n  mounted() {\n    // this.nutrients = NutrientService.getNutrientsByKind(this.kind);\n    // for (var i = 0; i < this.nutrients.length; i++) {\n    //   this.data.push({\n    //     nutrient: this.nutrients[i].name,\n    //     function: this.nutrients[i].function,\n    //     sources: this.nutrients[i].sources,\n    //     quantity: 0,\n    //     unit: this.nutrients[i].unit,\n    //     progress: 0,\n    //   });\n    fetch(\"/api/calculator/getNutrients\").then(response => response.text()).then(data => {\n      this.nutrients = JSON.parse(data);\n      console.log(this.nutrients);\n      var n = this.nutrients.filter(obj => {\n        console.log(obj.kind);\n        console.log(this.kind);\n        return obj.kind === this.kind;\n      });\n\n      for (var i = 0; i < n.length; i++) {\n        this.data.push({\n          nutrient: this.nutrients[i].name,\n          function: this.nutrients[i].function,\n          sources: this.nutrients[i].sources,\n          quantity: 0,\n          unit: this.nutrients[i].unit,\n          progress: 0\n        });\n      }\n    });\n  } // fetch(\"/api/calculator/getNutrients\")\n  //   .then((response) => response.text())\n  //   .then((data) => {\n  //     this.nutrients = JSON.parse(data);\n  //     for (var i = 0; i < this.nutrients.length; i++) {\n  //       this.data.push({\n  //         nutrient: this.nutrients[i].name,\n  //         function: this.nutrients[i].function,\n  //         sources: this.nutrients[i].sources,\n  //         quantity: 0,\n  //         unit: this.nutrients[i].unit,\n  //         progress: 0,\n  //       });\n  //     }\n  //   });\n  ,\n\n  methods: {\n    showDetails(data) {\n      this.$parent.openDialog(data);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCA,eAAe;EACbA,KAAK,EAAE,CAAC,MAAD,CADM;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MAELD,IAAI,EAAE;IAFD,CAAP;EAID,CAPY;;EAQbE,OAAO,GAAG;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIC,KAAK,CAAC,8BAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWJ,IAAD,IAAU;MACZ,KAAKC,SAAL,GAAiBM,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAjB;MACAS,OAAO,CAACC,GAAR,CAAY,KAAKT,SAAjB;MACA,IAAIU,IAAI,KAAKV,SAAL,CAAeW,MAAf,CAAsBC,GAAE,IAAK;QACnCJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB;QACAL,OAAO,CAACC,GAAR,CAAY,KAAKI,IAAjB;QACE,OAAOD,GAAG,CAACC,IAAJ,KAAa,KAAKA,IAAzB;MACH,CAJO,CAAR;;MAKZ,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,CAAC,CAACK,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;QACjC,KAAKf,IAAL,CAAUiB,IAAV,CAAe;UACbC,QAAQ,EAAE,KAAKjB,SAAL,CAAec,CAAf,EAAkBI,IADf;UAEbC,QAAQ,EAAE,KAAKnB,SAAL,CAAec,CAAf,EAAkBK,QAFf;UAGbC,OAAO,EAAE,KAAKpB,SAAL,CAAec,CAAf,EAAkBM,OAHd;UAIbC,QAAQ,EAAE,CAJG;UAKbC,IAAI,EAAE,KAAKtB,SAAL,CAAec,CAAf,EAAkBQ,IALX;UAMbC,QAAQ,EAAE;QANG,CAAf;MAQO;IAAC,CAnBN;EAoBJ,CAvCW,CAwCX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAtDW;;EAwDbC,OAAO,EAAE;IACPC,WAAW,CAAC1B,IAAD,EAAO;MAChB,KAAK2B,OAAL,CAAaC,UAAb,CAAwB5B,IAAxB;IACD;;EAHM;AAxDI,CAAf","names":["props","data","nutrients","mounted","fetch","then","response","text","JSON","parse","console","log","n","filter","obj","kind","i","length","push","nutrient","name","function","sources","quantity","unit","progress","methods","showDetails","$parent","openDialog"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Diplomski\\Nutrical\\src\\frontend\\src\\components\\ScoreVitamins.vue"],"sourcesContent":["<template>\r\n  <Card class=\"border\">\r\n    <template #title> {{ kind }} </template>\r\n    <template #content>\r\n      <div>\r\n        <DataTable :value=\"data\" class=\"hide-header\">\r\n          <Column field=\"nutrient\">\r\n            <template #body=\"{ data }\">\r\n              <p\r\n                style=\"cursor: pointer\"\r\n                v-tooltip.top=\"'About nutrient'\"\r\n                @click=\"showDetails(data)\"\r\n              >\r\n                {{ data.nutrient }}\r\n              </p>\r\n            </template>\r\n          </Column>\r\n          <Column field=\"quantity\">\r\n            <template #body=\"{ data }\">\r\n              {{ data.quantity }} {{ data.unit }}\r\n            </template>\r\n          </Column>\r\n          <Column field=\"progress\" style=\"min-width: 5rem\">\r\n            <template #body=\"{ data }\">\r\n              <ProgressBar :value=\"data.progress\" />\r\n            </template>\r\n          </Column>\r\n        </DataTable>\r\n      </div>\r\n    </template>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"kind\"],\r\n  data() {\r\n    return {\r\n      nutrients: [],\r\n      data: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    // this.nutrients = NutrientService.getNutrientsByKind(this.kind);\r\n    // for (var i = 0; i < this.nutrients.length; i++) {\r\n    //   this.data.push({\r\n    //     nutrient: this.nutrients[i].name,\r\n    //     function: this.nutrients[i].function,\r\n    //     sources: this.nutrients[i].sources,\r\n    //     quantity: 0,\r\n    //     unit: this.nutrients[i].unit,\r\n    //     progress: 0,\r\n    //   });\r\n        fetch(\"/api/calculator/getNutrients\")\r\n            .then((response) => response.text())\r\n            .then((data) => {\r\n                this.nutrients = JSON.parse(data);\r\n                console.log(this.nutrients)\r\n                var n = this.nutrients.filter(obj => {\r\n                  console.log(obj.kind);\r\n                  console.log(this.kind);\r\n                    return obj.kind === this.kind;\r\n                });\r\n    for (var i = 0; i < n.length; i++) {\r\n      this.data.push({\r\n        nutrient: this.nutrients[i].name,\r\n        function: this.nutrients[i].function,\r\n        sources: this.nutrients[i].sources,\r\n        quantity: 0,\r\n        unit: this.nutrients[i].unit,\r\n        progress: 0,\r\n      });\r\n            }});\r\n    }\r\n    // fetch(\"/api/calculator/getNutrients\")\r\n    //   .then((response) => response.text())\r\n    //   .then((data) => {\r\n    //     this.nutrients = JSON.parse(data);\r\n    //     for (var i = 0; i < this.nutrients.length; i++) {\r\n    //       this.data.push({\r\n    //         nutrient: this.nutrients[i].name,\r\n    //         function: this.nutrients[i].function,\r\n    //         sources: this.nutrients[i].sources,\r\n    //         quantity: 0,\r\n    //         unit: this.nutrients[i].unit,\r\n    //         progress: 0,\r\n    //       });\r\n    //     }\r\n    //   });\r\n  ,\r\n  methods: {\r\n    showDetails(data) {\r\n      this.$parent.openDialog(data);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n::v-deep(.p-progressbar) .p-progressbar-value {\r\n  background-color: var(--green);\r\n  font-size: 12px;\r\n}\r\n\r\n::v-deep(.p-datatable .p-datatable-thead tr th) {\r\n  padding: 0 !important;\r\n}\r\n\r\n::v-deep(.p-datatable .p-datatable-tbody tr td) {\r\n  padding: 5px !important;\r\n  font-size: 12px !important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}